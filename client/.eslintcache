[{"/Users/bishwa/Bishwa/new/pns-blog/client/src/index.js":"1","/Users/bishwa/Bishwa/new/pns-blog/client/src/reportWebVitals.js":"2","/Users/bishwa/Bishwa/new/pns-blog/client/src/App.js":"3","/Users/bishwa/Bishwa/new/pns-blog/client/src/components/NotFound.js":"4","/Users/bishwa/Bishwa/new/pns-blog/client/src/components/Edit.js":"5","/Users/bishwa/Bishwa/new/pns-blog/client/src/components/Dashboard.js":"6","/Users/bishwa/Bishwa/new/pns-blog/client/src/components/UpdateName.js":"7","/Users/bishwa/Bishwa/new/pns-blog/client/src/components/Details.js":"8","/Users/bishwa/Bishwa/new/pns-blog/client/src/components/Navbar.js":"9","/Users/bishwa/Bishwa/new/pns-blog/client/src/components/EditImage.js":"10","/Users/bishwa/Bishwa/new/pns-blog/client/src/private/PrivateRoute.js":"11","/Users/bishwa/Bishwa/new/pns-blog/client/src/components/Create.js":"12","/Users/bishwa/Bishwa/new/pns-blog/client/src/components/Home.js":"13","/Users/bishwa/Bishwa/new/pns-blog/client/src/components/ChangePassword.js":"14","/Users/bishwa/Bishwa/new/pns-blog/client/src/components/auth/Register.js":"15","/Users/bishwa/Bishwa/new/pns-blog/client/src/components/auth/Login.js":"16","/Users/bishwa/Bishwa/new/pns-blog/client/src/private/RouteLinks.js":"17","/Users/bishwa/Bishwa/new/pns-blog/client/src/store/index.js":"18","/Users/bishwa/Bishwa/new/pns-blog/client/src/components/Sidebar.js":"19","/Users/bishwa/Bishwa/new/pns-blog/client/src/components/Loader.js":"20","/Users/bishwa/Bishwa/new/pns-blog/client/src/components/Pagination.js":"21","/Users/bishwa/Bishwa/new/pns-blog/client/src/components/auth/BgImage.js":"22","/Users/bishwa/Bishwa/new/pns-blog/client/src/store/types/PostTypes.js":"23","/Users/bishwa/Bishwa/new/pns-blog/client/src/store/asyncMethods/AuthMethods.js":"24","/Users/bishwa/Bishwa/new/pns-blog/client/src/store/types/UserTypes.js":"25","/Users/bishwa/Bishwa/new/pns-blog/client/src/store/asyncMethods/PostMethods.js":"26","/Users/bishwa/Bishwa/new/pns-blog/client/src/store/types/ProfileTypes.js":"27","/Users/bishwa/Bishwa/new/pns-blog/client/src/store/asyncMethods/ProfileMethods.js":"28","/Users/bishwa/Bishwa/new/pns-blog/client/src/store/reducers/PostReducer.js":"29","/Users/bishwa/Bishwa/new/pns-blog/client/src/store/reducers/ProfileReducer.js":"30","/Users/bishwa/Bishwa/new/pns-blog/client/src/store/reducers/AuthReducer.js":"31"},{"size":473,"mtime":1617881528133,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":1617881528133,"results":"34","hashOfConfig":"33"},{"size":1743,"mtime":1618196775586,"results":"35","hashOfConfig":"33"},{"size":471,"mtime":1617881528118,"results":"36","hashOfConfig":"33"},{"size":3779,"mtime":1617881528117,"results":"37","hashOfConfig":"33"},{"size":3304,"mtime":1617881528117,"results":"38","hashOfConfig":"33"},{"size":2281,"mtime":1617881528118,"results":"39","hashOfConfig":"33"},{"size":1340,"mtime":1617881528117,"results":"40","hashOfConfig":"33"},{"size":1075,"mtime":1618196063374,"results":"41","hashOfConfig":"33"},{"size":2735,"mtime":1617881528117,"results":"42","hashOfConfig":"33"},{"size":355,"mtime":1617881528133,"results":"43","hashOfConfig":"33"},{"size":5350,"mtime":1617881528117,"results":"44","hashOfConfig":"33"},{"size":2537,"mtime":1617881528117,"results":"45","hashOfConfig":"33"},{"size":2808,"mtime":1617881528117,"results":"46","hashOfConfig":"33"},{"size":2569,"mtime":1617881528132,"results":"47","hashOfConfig":"33"},{"size":2231,"mtime":1618196067993,"results":"48","hashOfConfig":"33"},{"size":355,"mtime":1617881528133,"results":"49","hashOfConfig":"33"},{"size":688,"mtime":1617881528135,"results":"50","hashOfConfig":"33"},{"size":408,"mtime":1617881528118,"results":"51","hashOfConfig":"33"},{"size":161,"mtime":1617881528118,"results":"52","hashOfConfig":"33"},{"size":1168,"mtime":1617881528118,"results":"53","hashOfConfig":"33"},{"size":92,"mtime":1617881528132,"results":"54","hashOfConfig":"33"},{"size":884,"mtime":1617881528135,"results":"55","hashOfConfig":"33"},{"size":1238,"mtime":1617881528135,"results":"56","hashOfConfig":"33"},{"size":248,"mtime":1617881528136,"results":"57","hashOfConfig":"33"},{"size":4455,"mtime":1617881528135,"results":"58","hashOfConfig":"33"},{"size":116,"mtime":1617881528135,"results":"59","hashOfConfig":"33"},{"size":1660,"mtime":1617881528135,"results":"60","hashOfConfig":"33"},{"size":2603,"mtime":1617881528135,"results":"61","hashOfConfig":"33"},{"size":439,"mtime":1617881528135,"results":"62","hashOfConfig":"33"},{"size":1493,"mtime":1617881528135,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1kcz9bx",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"66"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"/Users/bishwa/Bishwa/new/pns-blog/client/src/index.js",[],["139","140"],"/Users/bishwa/Bishwa/new/pns-blog/client/src/reportWebVitals.js",[],"/Users/bishwa/Bishwa/new/pns-blog/client/src/App.js",[],"/Users/bishwa/Bishwa/new/pns-blog/client/src/components/NotFound.js",[],"/Users/bishwa/Bishwa/new/pns-blog/client/src/components/Edit.js",["141","142","143","144"],"import { useState, useEffect } from 'react';\nimport Helmet from 'react-helmet';\nimport { useParams, useHistory } from 'react-router-dom';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPost, updateAction } from '../store/asyncMethods/PostMethods';\nimport {\n\tPOST_RESET,\n\tRESET_UPDATE,\n\tRESET_UPDATE_ERRORS,\n} from '../store/types/PostTypes';\nimport Loader from './Loader';\nconst Edit = () => {\n\tconst { push } = useHistory();\n\tconst { id } = useParams();\n\tconst [value, setValue] = useState('');\n\tconst [state, setState] = useState({\n\t\ttitle: '',\n\t\tdescription: '',\n\t});\n\tconst dispatch = useDispatch();\n\tconst { loading, redirect } = useSelector((state) => state.PostReducer);\n\tconst { post, postStatus } = useSelector((state) => state.FetchPost);\n\tconst { editErrors } = useSelector((state) => state.UpdatePost);\n\tuseEffect(() => {\n\t\tif (postStatus) {\n\t\t\tsetState({\n\t\t\t\ttitle: post.title,\n\t\t\t\tdescription: post.description,\n\t\t\t});\n\t\t\tsetValue(post.body);\n\t\t\tdispatch({ type: POST_RESET });\n\t\t} else {\n\t\t\tdispatch(fetchPost(id));\n\t\t}\n\t}, [post]);\n\tconst updatePost = (e) => {\n\t\te.preventDefault();\n\t\tdispatch(\n\t\t\tupdateAction({\n\t\t\t\ttitle: state.title,\n\t\t\t\tbody: value,\n\t\t\t\tdescription: state.description,\n\t\t\t\tid: post._id,\n\t\t\t})\n\t\t);\n\t};\n\tuseEffect(() => {\n\t\tif (editErrors.length !== 0) {\n\t\t\teditErrors.map((error) => toast.error(error.msg));\n\t\t\tdispatch({ type: RESET_UPDATE_ERRORS });\n\t\t}\n\t}, [editErrors]);\n\tuseEffect(() => {\n\t\tif (redirect) {\n\t\t\tpush('/dashboard');\n\t\t}\n\t}, [redirect]);\n\treturn !loading ? (\n\t\t<div className='mt-100'>\n\t\t\t<Helmet>\n\t\t\t\t<title>Edit post</title>\n\t\t\t\t<meta name='description' content='update post' />\n\t\t\t</Helmet>\n\t\t\t<Toaster\n\t\t\t\tposition='top-right'\n\t\t\t\treverseOrder={false}\n\t\t\t\ttoastOptions={{\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tfontSize: '14px',\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<div className='container'>\n\t\t\t\t<div className='row'>\n\t\t\t\t\t<div className='col-6'>\n\t\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t\t<h3 className='card__h3'>Edit post</h3>\n\t\t\t\t\t\t\t<form onSubmit={updatePost}>\n\t\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t\t<label htmlFor='title'>Post title</label>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tname='title'\n\t\t\t\t\t\t\t\t\t\tid='title'\n\t\t\t\t\t\t\t\t\t\tclassName='group__control'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Post title'\n\t\t\t\t\t\t\t\t\t\tvalue={state.title}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\t\tsetState({ ...state, title: e.target.value })\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t\t<label htmlFor='body'>Post body</label>\n\t\t\t\t\t\t\t\t\t<ReactQuill\n\t\t\t\t\t\t\t\t\t\ttheme='snow'\n\t\t\t\t\t\t\t\t\t\tid='body'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Post body...'\n\t\t\t\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\t\t\t\tonChange={setValue}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t\t<label htmlFor='description'>Meta Description</label>\n\t\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\t\tname='description'\n\t\t\t\t\t\t\t\t\t\tid='description'\n\t\t\t\t\t\t\t\t\t\tcols='30'\n\t\t\t\t\t\t\t\t\t\trows='10'\n\t\t\t\t\t\t\t\t\t\tdefaultValue={state.description}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\t\tsetState({ ...state, description: e.target.value })\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tonKeyUp={(e) =>\n\t\t\t\t\t\t\t\t\t\t\tsetState({ ...state, description: e.target.value })\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tclassName='group__control'\n\t\t\t\t\t\t\t\t\t\tplaceholder='meta description...'\n\t\t\t\t\t\t\t\t\t\tmaxLength='150'></textarea>\n\t\t\t\t\t\t\t\t\t<p className='length'>\n\t\t\t\t\t\t\t\t\t\t{state.description ? state.description.length : 0}\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\t\tvalue='Edit'\n\t\t\t\t\t\t\t\t\t\tclassName='btn btn-default btn-block'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t) : (\n\t\t<Loader />\n\t);\n};\nexport default Edit;\n","/Users/bishwa/Bishwa/new/pns-blog/client/src/components/Dashboard.js",["145","146"],"import { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useSelector, useDispatch } from 'react-redux';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { Link, useParams } from 'react-router-dom';\nimport {\n\tREDIRECT_FALSE,\n\tREMOVE_MESSAGE,\n\tSET_LOADER,\n\tCLOSE_LOADER,\n\tSET_MESSAGE,\n} from '../store/types/PostTypes';\nimport { fetchPosts } from '../store/asyncMethods/PostMethods';\nimport { BsPencil, BsArchive, BsImage } from 'react-icons/bs';\nimport axios from 'axios';\nimport moment from 'moment';\nimport Loader from './Loader';\nimport Sidebar from './Sidebar';\nimport Pagination from './Pagination';\nconst Dashboard = () => {\n\tconst { redirect, message, loading } = useSelector(\n\t\t(state) => state.PostReducer\n\t);\n\tconst {\n\t\tuser: { _id },\n\t\ttoken,\n\t} = useSelector((state) => state.AuthReducer);\n\tconst { posts, count, perPage } = useSelector((state) => state.FetchPosts);\n\tlet { page } = useParams();\n\tif (page === undefined) {\n\t\tpage = 1;\n\t}\n\tconst dispatch = useDispatch();\n\tconst deletePost = async (id) => {\n\t\tconst confirm = window.confirm('Are you really want to delete this post?');\n\t\tif (confirm) {\n\t\t\tdispatch({ type: SET_LOADER });\n\t\t\ttry {\n\t\t\t\tconst config = {\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t\tconst {\n\t\t\t\t\tdata: { msg },\n\t\t\t\t} = await axios.get(`/delete/${id}`, config);\n\t\t\t\tdispatch(fetchPosts(_id, page));\n\t\t\t\tdispatch({ type: SET_MESSAGE, payload: msg });\n\t\t\t} catch (error) {\n\t\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t}\n\t};\n\tuseEffect(() => {\n\t\tif (redirect) {\n\t\t\tdispatch({ type: REDIRECT_FALSE });\n\t\t}\n\t\tif (message) {\n\t\t\ttoast.success(message);\n\t\t\tdispatch({ type: REMOVE_MESSAGE });\n\t\t}\n\t}, [message]);\n\tuseEffect(() => {\n\t\tdispatch(fetchPosts(_id, page));\n\t}, [page]);\n\treturn (\n\t\t<>\n\t\t\t<Helmet>\n\t\t\t\t<title>User Dashboard</title>\n\t\t\t\t<meta name='description' content='User Dashboard' />\n\t\t\t</Helmet>\n\t\t\t<Toaster\n\t\t\t\tposition='top-center'\n\t\t\t\treverseOrder={false}\n\t\t\t\ttoastOptions={{\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tfontSize: '14px',\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<div className='container mt-100'>\n\t\t\t\t<div className='row ml-minus-15 mr-minus-15'>\n\t\t\t\t\t<div className='col-3 p-15'>\n\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='col-9 p-15'>\n\t\t\t\t\t\t{!loading ? (\n\t\t\t\t\t\t\tposts.length > 0 ? (\n\t\t\t\t\t\t\t\tposts.map((post) => (\n\t\t\t\t\t\t\t\t\t<div className='dashboard__posts' key={post._id}>\n\t\t\t\t\t\t\t\t\t\t<div className='dashboard__posts__title'>\n\t\t\t\t\t\t\t\t\t\t\t<Link to={`/details/${post._id}`}>{post.title}</Link>\n\t\t\t\t\t\t\t\t\t\t\t<span>Published {moment(post.updatedAt).fromNow()}</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className='dashboard__posts__links'>\n\t\t\t\t\t\t\t\t\t\t\t<Link to={`/updateImage/${post._id}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t<BsImage className='icon' />\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t<Link to={`/edit/${post._id}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t<BsPencil className='icon' />\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t<BsArchive\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => deletePost(post._id)}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='icon'\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t'You dont have any post'\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Loader />\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Pagination\n\t\t\t\t\t\t\tpath='dashboard'\n\t\t\t\t\t\t\tpage={page}\n\t\t\t\t\t\t\tperPage={perPage}\n\t\t\t\t\t\t\tcount={count}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\nexport default Dashboard;\n","/Users/bishwa/Bishwa/new/pns-blog/client/src/components/UpdateName.js",["147","148","149","150"],"import Helmet from 'react-helmet';\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { useHistory } from 'react-router-dom';\nimport { updateNameAction } from '../store/asyncMethods/ProfileMethods';\nimport { RESET_PROFILE_ERRORS } from '../store/types/ProfileTypes';\nimport Sidebar from './Sidebar';\n\nconst UpdateName = () => {\n\tconst { push } = useHistory();\n\tconst [userName, setUserName] = useState('');\n\tconst {\n\t\tuser: { name, _id },\n\t} = useSelector((user) => user.AuthReducer);\n\tconst { loading, redirect } = useSelector((state) => state.PostReducer);\n\tconst { updateErrors } = useSelector((state) => state.updateName);\n\tconst dispatch = useDispatch();\n\tconst updateNameMethod = (e) => {\n\t\te.preventDefault();\n\t\tdispatch(updateNameAction({ name: userName, id: _id }));\n\t};\n\tuseEffect(() => {\n\t\tsetUserName(name);\n\t}, []);\n\tuseEffect(() => {\n\t\tif (updateErrors.length !== 0) {\n\t\t\tupdateErrors.map((error) => toast.error(error.msg));\n\t\t\tdispatch({ type: RESET_PROFILE_ERRORS });\n\t\t}\n\t}, [updateErrors]);\n\tuseEffect(() => {\n\t\tif (redirect) {\n\t\t\tpush('/dashboard');\n\t\t}\n\t}, [redirect]);\n\treturn (\n\t\t<div className='container mt-100'>\n\t\t\t<Helmet>\n\t\t\t\t<title>Update Name</title>\n\t\t\t\t<meta name='description' content='update the user name' />\n\t\t\t</Helmet>\n\t\t\t<Toaster\n\t\t\t\tposition='top-right'\n\t\t\t\treverseOrder={false}\n\t\t\t\ttoastOptions={{\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tfontSize: '14px',\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<div className='row ml-minus-15 mr-minus-15'>\n\t\t\t\t<div className='col-3 p-15'>\n\t\t\t\t\t<Sidebar />\n\t\t\t\t</div>\n\t\t\t\t<div className='col-9 p-15'>\n\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t<h3 className='card__h3'>Update Name</h3>\n\t\t\t\t\t\t<form onSubmit={updateNameMethod}>\n\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tname=''\n\t\t\t\t\t\t\t\t\tclassName='group__control'\n\t\t\t\t\t\t\t\t\tplaceholder='Name...'\n\t\t\t\t\t\t\t\t\tonChange={(e) => setUserName(e.target.value)}\n\t\t\t\t\t\t\t\t\tvalue={userName}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\tvalue='Update Name'\n\t\t\t\t\t\t\t\t\tclassName='btn btn-default btn-block'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\nexport default UpdateName;\n","/Users/bishwa/Bishwa/new/pns-blog/client/src/components/Details.js",["151"],"import { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\nimport { htmlToText } from 'html-to-text';\nimport { postDetails } from '../store/asyncMethods/PostMethods';\nimport Loader from './Loader';\nconst Details = () => {\n\tconst { id } = useParams();\n\tconst { loading, details } = useSelector((state) => state.PostReducer);\n\tconst dispatch = useDispatch();\n\tuseEffect(() => {\n\t\tdispatch(postDetails(id));\n\t}, [id]);\n\treturn (\n\t\t<div className='container'>\n\t\t\t<div className='row mt-100'>\n\t\t\t\t<div className='col-8'>\n\t\t\t\t\t{!loading ? (\n\t\t\t\t\t\t<div className='post__details'>\n\t\t\t\t\t\t\t<div className='post__header'>\n\t\t\t\t\t\t\t\t<div className='post__header__avator'>\n\t\t\t\t\t\t\t\t\t{details.userName ? details.userName[0] : ''}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='post__header__user'>\n\t\t\t\t\t\t\t\t\t<span>{details.userName}</span>\n\t\t\t\t\t\t\t\t\t<span>{moment(details.updatedAt).format('MMM Do YY')}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='post__body'>\n\t\t\t\t\t\t\t\t<h1 className='post__body__title'>{details.title}</h1>\n\t\t\t\t\t\t\t\t<div className='post__body__details'>\n\t\t\t\t\t\t\t\t\t{htmlToText(details.body)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Loader />\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\nexport default Details;\n","/Users/bishwa/Bishwa/new/pns-blog/client/src/components/Navbar.js",[],"/Users/bishwa/Bishwa/new/pns-blog/client/src/components/EditImage.js",["152","153","154"],"import { Helmet } from 'react-helmet';\nimport { useState, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { updateImageAction } from '../store/asyncMethods/PostMethods';\nimport { RESET_UPDATE_IMAGE_ERRORS } from '../store/types/PostTypes';\nconst EditImage = () => {\n\tconst { id } = useParams();\n\tconst { push } = useHistory();\n\tconst dispatch = useDispatch();\n\tconst { updateImageErrors } = useSelector((state) => state.UpdateImage);\n\tconst { redirect } = useSelector((state) => state.PostReducer);\n\tconst [state, setState] = useState({\n\t\timage: '',\n\t\timagePreview: '',\n\t\timageName: 'Choose image',\n\t});\n\tconst fileHandle = (e) => {\n\t\tif (e.target.files.length !== 0) {\n\t\t\tconst reader = new FileReader();\n\t\t\treader.onloadend = () => {\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\timagePreview: reader.result,\n\t\t\t\t\timage: e.target.files[0],\n\t\t\t\t\timageName: e.target.files[0].name,\n\t\t\t\t});\n\t\t\t};\n\t\t\treader.readAsDataURL(e.target.files[0]);\n\t\t}\n\t};\n\tconst updateImage = (e) => {\n\t\te.preventDefault();\n\t\tconst formData = new FormData();\n\t\tformData.append('id', id);\n\t\tformData.append('image', state.image);\n\t\tdispatch(updateImageAction(formData));\n\t};\n\tuseEffect(() => {\n\t\tif (updateImageErrors.length !== 0) {\n\t\t\tupdateImageErrors.map((error) => toast.error(error.msg));\n\t\t\tdispatch({ type: RESET_UPDATE_IMAGE_ERRORS });\n\t\t}\n\t}, [updateImageErrors]);\n\tuseEffect(() => {\n\t\tif (redirect) {\n\t\t\tpush('/dashboard');\n\t\t}\n\t}, [redirect]);\n\treturn (\n\t\t<div className='container mt-100'>\n\t\t\t<Helmet>\n\t\t\t\t<title>Update image</title>\n\t\t\t\t<meta name='description' content='Update image' />\n\t\t\t</Helmet>\n\t\t\t<Toaster\n\t\t\t\tposition='top-right'\n\t\t\t\treverseOrder={false}\n\t\t\t\ttoastOptions={{\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tfontSize: '14px',\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<div className='row'>\n\t\t\t\t<div className='col-6'>\n\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t<h3 className='card__h3'>Update Post Image</h3>\n\t\t\t\t\t\t<form onSubmit={updateImage}>\n\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t<label htmlFor='image' className='image__label'>\n\t\t\t\t\t\t\t\t\t{state.imageName}\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='file'\n\t\t\t\t\t\t\t\t\tname='image'\n\t\t\t\t\t\t\t\t\tid='image'\n\t\t\t\t\t\t\t\t\tonChange={fileHandle}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t<div className='imagePreivew'>\n\t\t\t\t\t\t\t\t\t{state.imagePreview ? <img src={state.imagePreview} /> : ''}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\tvalue='Update image'\n\t\t\t\t\t\t\t\t\tclassName='btn btn-default btn-block'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\nexport default EditImage;\n","/Users/bishwa/Bishwa/new/pns-blog/client/src/private/PrivateRoute.js",[],"/Users/bishwa/Bishwa/new/pns-blog/client/src/components/Create.js",["155","156"],"import { useState, useEffect } from 'react';\nimport Helmet from 'react-helmet';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { createAction } from '../store/asyncMethods/PostMethods';\n\nconst Create = (props) => {\n\tconst { createErrors, redirect } = useSelector((state) => state.PostReducer);\n\tconst [currentImage, setCurrentImage] = useState('Choose image');\n\tconst [imagePreview, setImagePreview] = useState('');\n\tconst dispatch = useDispatch();\n\tconst {\n\t\tuser: { _id, name },\n\t} = useSelector((state) => state.AuthReducer);\n\tconst fileHandle = (e) => {\n\t\tif (e.target.files.length !== 0) {\n\t\t\tsetCurrentImage(e.target.files[0].name);\n\t\t\tsetState({\n\t\t\t\t...state,\n\t\t\t\t[e.target.name]: e.target.files[0],\n\t\t\t});\n\t\t\tconst reader = new FileReader();\n\t\t\treader.onloadend = () => {\n\t\t\t\tsetImagePreview(reader.result);\n\t\t\t};\n\t\t\treader.readAsDataURL(e.target.files[0]);\n\t\t}\n\t};\n\tconst [state, setState] = useState({\n\t\ttitle: '',\n\t\tdescription: '',\n\t\timage: '',\n\t});\n\tconst handleDescription = (e) => {\n\t\tsetState({\n\t\t\t...state,\n\t\t\t[e.target.name]: e.target.value,\n\t\t});\n\t};\n\tconst [slug, setSlug] = useState('');\n\tconst [slugButton, setSlugButton] = useState(false);\n\tconst slugHandle = (e) => {\n\t\tsetSlugButton(true);\n\t\tsetSlug(e.target.value);\n\t};\n\tconst handleURL = (e) => {\n\t\te.preventDefault();\n\t\tsetSlug(slug.trim().split(' ').join('-'));\n\t};\n\tconst handleInput = (e) => {\n\t\tsetState({\n\t\t\t...state,\n\t\t\t[e.target.name]: e.target.value,\n\t\t});\n\t\tconst createSlug = e.target.value.trim().split(' ').join('-');\n\t\tsetSlug(createSlug);\n\t};\n\tconst [value, setValue] = useState('');\n\tconst createPost = (e) => {\n\t\te.preventDefault();\n\t\tconst { title, description, image } = state;\n\t\tconst formData = new FormData();\n\t\tformData.append('title', title);\n\t\tformData.append('body', value);\n\t\tformData.append('image', image);\n\t\tformData.append('description', description);\n\t\tformData.append('slug', slug);\n\t\tformData.append('name', name);\n\t\tformData.append('id', _id);\n\t\tdispatch(createAction(formData));\n\t};\n\tuseEffect(() => {\n\t\tif (redirect) {\n\t\t\tprops.history.push('/dashboard');\n\t\t}\n\t\tif (createErrors.length !== 0) {\n\t\t\tcreateErrors.map((err) => toast.error(err.msg));\n\t\t}\n\t}, [createErrors, redirect]);\n\n\treturn (\n\t\t<div className='create mt-100'>\n\t\t\t<Helmet>\n\t\t\t\t<title>Create new post</title>\n\t\t\t\t<meta name='description' content='Create a new post' />\n\t\t\t</Helmet>\n\t\t\t<Toaster\n\t\t\t\tposition='top-right'\n\t\t\t\treverseOrder={false}\n\t\t\t\ttoastOptions={{\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tfontSize: '14px',\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<div className='container'>\n\t\t\t\t<form onSubmit={createPost}>\n\t\t\t\t\t<div className='row ml-minus-15 mr-minus-15'>\n\t\t\t\t\t\t<div className='col-6 p-15'>\n\t\t\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t\t\t<h3 className='card__h3'>Create a new post</h3>\n\n\t\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t\t<label htmlFor='title'>Post Title</label>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tname='title'\n\t\t\t\t\t\t\t\t\t\tid='title'\n\t\t\t\t\t\t\t\t\t\tvalue={state.title}\n\t\t\t\t\t\t\t\t\t\tonChange={handleInput}\n\t\t\t\t\t\t\t\t\t\tclassName='group__control'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Post title...'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t\t<label htmlFor='image' className='image__label'>\n\t\t\t\t\t\t\t\t\t\t{currentImage}\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='file'\n\t\t\t\t\t\t\t\t\t\tname='image'\n\t\t\t\t\t\t\t\t\t\tid='image'\n\t\t\t\t\t\t\t\t\t\tonChange={fileHandle}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t\t<label htmlFor='body'>Post body</label>\n\t\t\t\t\t\t\t\t\t<ReactQuill\n\t\t\t\t\t\t\t\t\t\ttheme='snow'\n\t\t\t\t\t\t\t\t\t\tid='body'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Post body...'\n\t\t\t\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\t\t\t\tonChange={setValue}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t\t<label htmlFor='description'>Meta Description</label>\n\t\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\t\tname='description'\n\t\t\t\t\t\t\t\t\t\tid='description'\n\t\t\t\t\t\t\t\t\t\tcols='30'\n\t\t\t\t\t\t\t\t\t\trows='10'\n\t\t\t\t\t\t\t\t\t\tdefaultValue={state.description}\n\t\t\t\t\t\t\t\t\t\tonChange={handleDescription}\n\t\t\t\t\t\t\t\t\t\tclassName='group__control'\n\t\t\t\t\t\t\t\t\t\tplaceholder='meta description...'\n\t\t\t\t\t\t\t\t\t\tmaxLength='150'></textarea>\n\t\t\t\t\t\t\t\t\t<p className='length'>\n\t\t\t\t\t\t\t\t\t\t{state.description ? state.description.length : 0}\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='col-6 p-15'>\n\t\t\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t\t<label htmlFor='slug'>Post URL</label>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tname='slug'\n\t\t\t\t\t\t\t\t\t\tid='slug'\n\t\t\t\t\t\t\t\t\t\tvalue={slug}\n\t\t\t\t\t\t\t\t\t\tonChange={slugHandle}\n\t\t\t\t\t\t\t\t\t\tclassName='group__control'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Post URL...'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t\t{slugButton ? (\n\t\t\t\t\t\t\t\t\t\t<button class='btn btn-default' onClick={handleURL}>\n\t\t\t\t\t\t\t\t\t\t\tUpdate Slug\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t\t<div className='imagePreivew'>\n\t\t\t\t\t\t\t\t\t\t{imagePreview ? <img src={imagePreview} /> : ''}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\t\tvalue='Create post'\n\t\t\t\t\t\t\t\t\t\tclassName='btn btn-default btn-block'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\nexport default Create;\n","/Users/bishwa/Bishwa/new/pns-blog/client/src/components/Home.js",["157"],"import { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams, Link } from 'react-router-dom';\nimport moment from 'moment';\nimport { htmlToText } from 'html-to-text';\nimport { homePosts } from '../store/asyncMethods/PostMethods';\nimport Loader from './Loader';\nimport Pagination from './Pagination';\nconst Home = () => {\n\tlet { page } = useParams();\n\tif (page === undefined) {\n\t\tpage = 1;\n\t}\n\tconst { loading } = useSelector((state) => state.PostReducer);\n\tconst { posts, count, perPage } = useSelector((state) => state.FetchPosts);\n\tconst dispatch = useDispatch();\n\tuseEffect(() => {\n\t\tdispatch(homePosts(page));\n\t}, [page]);\n\n\treturn (\n\t\t<>\n\t\t\t<Helmet>\n\t\t\t\t<title>Web articles</title>\n\t\t\t\t<meta\n\t\t\t\t\tname='description'\n\t\t\t\t\tcontent='Learn HTML, CSS, JavaScript, React, Vue, Flutter etc'\n\t\t\t\t/>\n\t\t\t</Helmet>\n\t\t\t<div className='container'>\n\t\t\t\t<div className='row mt-100' style={{ marginBottom: '30px' }}>\n\t\t\t\t\t<div className='col-9 home'>\n\t\t\t\t\t\t{!loading ? (\n\t\t\t\t\t\t\tposts.length > 0 ? (\n\t\t\t\t\t\t\t\tposts.map((post) => (\n\t\t\t\t\t\t\t\t\t<div className='row post-style' key={post._id}>\n\t\t\t\t\t\t\t\t\t\t<div className='col-8'>\n\t\t\t\t\t\t\t\t\t\t\t<div className='post'>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='post__header'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='post__header__avator'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{post.userName[0]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='post__header__user'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>{post.userName}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{moment(post.updatedAt).format('MMM Do YY')}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='post__body'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h1 className='post__body__title'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to={`/details/${post._id}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{post.title}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='post__body__details'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{htmlToText(post.body.slice(0, 300))}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className='col-4'>\n\t\t\t\t\t\t\t\t\t\t\t<div className='post__image'>\n\t\t\t\t\t\t\t\t\t\t\t\t<img src={`/images/${post.image}`} alt={post.image} />\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t'No posts'\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Loader />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='row'>\n\t\t\t\t\t<div className='col-9'>\n\t\t\t\t\t\t<Pagination\n\t\t\t\t\t\t\tpath='home'\n\t\t\t\t\t\t\tpage={page}\n\t\t\t\t\t\t\tperPage={perPage}\n\t\t\t\t\t\t\tcount={count}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\nexport default Home;\n","/Users/bishwa/Bishwa/new/pns-blog/client/src/components/ChangePassword.js",["158","159"],"import { useState, useEffect } from 'react';\nimport Sidebar from './Sidebar';\nimport Helmet from 'react-helmet';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { updatePasswordAction } from '../store/asyncMethods/ProfileMethods';\nimport { RESET_PROFILE_ERRORS } from '../store/types/ProfileTypes';\nimport Loader from './Loader';\nconst ChangePassword = () => {\n\tconst { push } = useHistory();\n\tconst [state, setState] = useState({\n\t\tcurrent: '',\n\t\tnewPassword: '',\n\t\tuserId: null,\n\t});\n\tconst dispatch = useDispatch();\n\tconst { loading, redirect } = useSelector((state) => state.PostReducer);\n\tconst { updateErrors } = useSelector((state) => state.updateName);\n\tconst {\n\t\tuser: { _id },\n\t} = useSelector((state) => state.AuthReducer);\n\n\tconst updatePassword = (e) => {\n\t\te.preventDefault();\n\t\tdispatch(\n\t\t\tupdatePasswordAction({\n\t\t\t\tcurrent: state.current,\n\t\t\t\tnewPassword: state.newPassword,\n\t\t\t\tuserId: _id,\n\t\t\t})\n\t\t);\n\t};\n\tuseEffect(() => {\n\t\tif (updateErrors.length !== 0) {\n\t\t\tupdateErrors.map((error) => toast.error(error.msg));\n\t\t\tdispatch({ type: RESET_PROFILE_ERRORS });\n\t\t}\n\t}, [updateErrors]);\n\tuseEffect(() => {\n\t\tif (redirect) {\n\t\t\tpush('/dashboard');\n\t\t}\n\t}, [redirect]);\n\treturn !loading ? (\n\t\t<div className='container mt-100'>\n\t\t\t<Helmet>\n\t\t\t\t<title>Update Password</title>\n\t\t\t\t<meta name='description' content='update the user password' />\n\t\t\t</Helmet>\n\t\t\t<Toaster\n\t\t\t\tposition='top-right'\n\t\t\t\treverseOrder={false}\n\t\t\t\ttoastOptions={{\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tfontSize: '14px',\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<div className='row ml-minus-15 mr-minus-15'>\n\t\t\t\t<div className='col-3 p-15'>\n\t\t\t\t\t<Sidebar />\n\t\t\t\t</div>\n\t\t\t\t<div className='col-9 p-15'>\n\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t<h3 className='card__h3'>Change Password</h3>\n\t\t\t\t\t\t<form onSubmit={updatePassword}>\n\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\tname=''\n\t\t\t\t\t\t\t\t\tclassName='group__control'\n\t\t\t\t\t\t\t\t\tplaceholder='Current Password'\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\tsetState({ ...state, current: e.target.value })\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tvalue={state.current}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\tname=''\n\t\t\t\t\t\t\t\t\tclassName='group__control'\n\t\t\t\t\t\t\t\t\tplaceholder='New Password'\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\tsetState({ ...state, newPassword: e.target.value })\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tvalue={state.newPassword}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\tvalue='Update Password'\n\t\t\t\t\t\t\t\t\tclassName='btn btn-default btn-block'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t) : (\n\t\t<Loader />\n\t);\n};\nexport default ChangePassword;\n","/Users/bishwa/Bishwa/new/pns-blog/client/src/components/auth/Register.js",[],"/Users/bishwa/Bishwa/new/pns-blog/client/src/components/auth/Login.js",[],"/Users/bishwa/Bishwa/new/pns-blog/client/src/private/RouteLinks.js",[],"/Users/bishwa/Bishwa/new/pns-blog/client/src/store/index.js",[],"/Users/bishwa/Bishwa/new/pns-blog/client/src/components/Sidebar.js",[],"/Users/bishwa/Bishwa/new/pns-blog/client/src/components/Loader.js",[],"/Users/bishwa/Bishwa/new/pns-blog/client/src/components/Pagination.js",["160"],"import { Link } from 'react-router-dom';\nimport { BsChevronDoubleRight, BsChevronDoubleLeft } from 'react-icons/bs';\nconst Pagination = ({ path, count, page, perPage }) => {\n\tlet totalPages = Math.ceil(count / perPage);\n\tlet startLoop = page;\n\tlet diff = totalPages - page;\n\tif (diff <= 3) {\n\t\tstartLoop = totalPages - 3;\n\t}\n\tlet endLoop = startLoop + 3;\n\tif (startLoop <= 0) {\n\t\tstartLoop = 1;\n\t}\n\tconst links = () => {\n\t\tconst store = [];\n\n\t\tfor (let i = startLoop; i <= endLoop; i++) {\n\t\t\tstore.push(\n\t\t\t\t<li key={i} className={i == page ? 'active' : ''}>\n\t\t\t\t\t<Link to={`/${path}/${i}`}>{i}</Link>\n\t\t\t\t</li>\n\t\t\t);\n\t\t}\n\t\treturn store;\n\t};\n\tconst next = () => {\n\t\tif (page < totalPages) {\n\t\t\treturn (\n\t\t\t\t<li>\n\t\t\t\t\t<Link to={`/${path}/${parseInt(page) + 1}`}>\n\t\t\t\t\t\t<BsChevronDoubleRight />\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t);\n\t\t}\n\t};\n\tconst prev = () => {\n\t\tif (page > 1) {\n\t\t\treturn (\n\t\t\t\t<li>\n\t\t\t\t\t<Link to={`/${path}/${parseInt(page - 1)}`}>\n\t\t\t\t\t\t<BsChevronDoubleLeft />\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t);\n\t\t}\n\t};\n\n\treturn totalPages && count > 3 ? (\n\t\t<div className='pagination'>\n\t\t\t{prev()}\n\t\t\t{links()}\n\t\t\t{next()}\n\t\t</div>\n\t) : (\n\t\t''\n\t);\n};\nexport default Pagination;\n","/Users/bishwa/Bishwa/new/pns-blog/client/src/components/auth/BgImage.js",[],"/Users/bishwa/Bishwa/new/pns-blog/client/src/store/types/PostTypes.js",[],"/Users/bishwa/Bishwa/new/pns-blog/client/src/store/asyncMethods/AuthMethods.js",[],"/Users/bishwa/Bishwa/new/pns-blog/client/src/store/types/UserTypes.js",[],"/Users/bishwa/Bishwa/new/pns-blog/client/src/store/asyncMethods/PostMethods.js",["161","162","163"],"import axios from 'axios';\nimport {\n\tCREATE_ERRORS,\n\tREMOVE_ERRORS,\n\tSET_LOADER,\n\tCLOSE_LOADER,\n\tREDIRECT_TRUE,\n\tREDIRECT_FALSE,\n\tSET_MESSAGE,\n\tREMOVE_MESSAGE,\n\tSET_POSTS,\n\tSET_POST,\n\tPOST_REQUEST,\n\tEDIT_ERRORS,\n\tSET_UPDATE_ERRORS,\n\tUPDATE_IMAGE_ERROR,\n\tSET_DETAILS,\n} from '../types/PostTypes';\n\nexport const createAction = (postData) => {\n\treturn async (dispatch, getState) => {\n\t\tconst {\n\t\t\tAuthReducer: { token },\n\t\t} = getState();\n\t\tdispatch({ type: SET_LOADER });\n\t\ttry {\n\t\t\tconst config = {\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t\t},\n\t\t\t\t// onUploadProgress: (data) => {\n\n\t\t\t\t// \tconsole.log(\n\t\t\t\t// \t\t'Your image upload progress: ',\n\t\t\t\t// \t\tMath.round((100 * data.loaded) / data.total)\n\t\t\t\t// \t);\n\t\t\t\t// },\n\t\t\t};\n\t\t\tconst {\n\t\t\t\tdata: { msg },\n\t\t\t} = await axios.post('/create_post', postData, config);\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tdispatch({ type: REMOVE_ERRORS });\n\t\t\tdispatch({ type: REDIRECT_TRUE });\n\t\t\tdispatch({ type: SET_MESSAGE, payload: msg });\n\t\t} catch (error) {\n\t\t\tconsole.log(error.response);\n\t\t\tconst { errors } = error.response.data;\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tdispatch({ type: CREATE_ERRORS, payload: errors });\n\t\t}\n\t};\n};\nexport const fetchPosts = (id, page) => {\n\treturn async (dispatch, getState) => {\n\t\tconst {\n\t\t\tAuthReducer: { token },\n\t\t} = getState();\n\t\tdispatch({ type: SET_LOADER });\n\t\ttry {\n\t\t\tconst config = {\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t\t},\n\t\t\t};\n\t\t\tconst {\n\t\t\t\tdata: { response, count, perPage },\n\t\t\t} = await axios.get(`/posts/${id}/${page}`, config);\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tdispatch({ type: SET_POSTS, payload: { response, count, perPage } });\n\t\t} catch (error) {\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t}\n\t};\n};\nexport const fetchPost = (id) => {\n\treturn async (dispatch, getState) => {\n\t\tconst {\n\t\t\tAuthReducer: { token },\n\t\t} = getState();\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t},\n\t\t};\n\t\tdispatch({ type: SET_LOADER });\n\t\ttry {\n\t\t\tconst {\n\t\t\t\tdata: { post },\n\t\t\t} = await axios.get(`/post/${id}`, config);\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tdispatch({ type: SET_POST, payload: post });\n\t\t\tdispatch({ type: POST_REQUEST });\n\t\t} catch (error) {\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tconsole.log(error.message);\n\t\t}\n\t};\n};\nexport const updateAction = (editData) => {\n\treturn async (dispatch, getState) => {\n\t\tconst {\n\t\t\tAuthReducer: { token },\n\t\t} = getState();\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t},\n\t\t};\n\t\tdispatch({ type: SET_LOADER });\n\t\ttry {\n\t\t\tconst { data } = await axios.post('/update', editData, config);\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tdispatch({ type: REDIRECT_TRUE });\n\t\t\tdispatch({ type: SET_MESSAGE, payload: data.msg });\n\t\t} catch (error) {\n\t\t\tconst {\n\t\t\t\tresponse: {\n\t\t\t\t\tdata: { errors },\n\t\t\t\t},\n\t\t\t} = error;\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tdispatch({ type: SET_UPDATE_ERRORS, payload: errors });\n\t\t\tconsole.log(error.response);\n\t\t}\n\t};\n};\n\nexport const updateImageAction = (updateData) => {\n\treturn async (dispatch, getState) => {\n\t\tconst {\n\t\t\tAuthReducer: { token },\n\t\t} = getState();\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t},\n\t\t};\n\t\tdispatch({ type: SET_LOADER });\n\t\ttry {\n\t\t\tconst {\n\t\t\t\tdata: { msg },\n\t\t\t} = await axios.post('/updateImage', updateData, config);\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tdispatch({ type: REDIRECT_TRUE });\n\t\t\tdispatch({ type: SET_MESSAGE, payload: msg });\n\t\t} catch (error) {\n\t\t\tconst {\n\t\t\t\tresponse: {\n\t\t\t\t\tdata: { errors },\n\t\t\t\t},\n\t\t\t} = error;\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tdispatch({ type: UPDATE_IMAGE_ERROR, payload: errors });\n\t\t}\n\t};\n};\nexport const homePosts = (page) => {\n\treturn async (dispatch) => {\n\t\tdispatch({ type: SET_LOADER });\n\t\ttry {\n\t\t\tconst {\n\t\t\t\tdata: { response, count, perPage },\n\t\t\t} = await axios.get(`/home/${page}`);\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tdispatch({ type: SET_POSTS, payload: { response, count, perPage } });\n\t\t} catch (error) {\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n};\nexport const postDetails = (id) => {\n\treturn async (dispatch) => {\n\t\tdispatch({ type: SET_LOADER });\n\t\ttry {\n\t\t\tconst {\n\t\t\t\tdata: { post },\n\t\t\t} = await axios.get(`/details/${id}`);\n\t\t\tconsole.log(post);\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tdispatch({ type: SET_DETAILS, payload: post });\n\t\t} catch (error) {\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n};\n","/Users/bishwa/Bishwa/new/pns-blog/client/src/store/types/ProfileTypes.js",[],"/Users/bishwa/Bishwa/new/pns-blog/client/src/store/asyncMethods/ProfileMethods.js",["164"],"import axios from 'axios';\nimport {\n\tSET_LOADER,\n\tCLOSE_LOADER,\n\tREDIRECT_TRUE,\n\tSET_MESSAGE,\n} from '../types/PostTypes';\nimport {\n\tRESET_PROFILE_ERRORS,\n\tSET_PROFILE_ERRORS,\n} from '../types/ProfileTypes';\nimport { SET_TOKEN } from '../types/UserTypes';\nexport const updateNameAction = (user) => {\n\treturn async (dispatch, getState) => {\n\t\tconst {\n\t\t\tAuthReducer: { token },\n\t\t} = getState();\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t},\n\t\t};\n\t\tdispatch({ type: SET_LOADER });\n\t\ttry {\n\t\t\tconst { data } = await axios.post('/updateName', user, config);\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\n\t\t\tlocalStorage.setItem('myToken', data.token);\n\t\t\tdispatch({ type: SET_TOKEN, payload: data.token });\n\t\t\tdispatch({ type: SET_MESSAGE, payload: data.msg });\n\t\t\tdispatch({ type: REDIRECT_TRUE });\n\t\t} catch (error) {\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tconsole.log(error.response.data.errors);\n\t\t\tdispatch({\n\t\t\t\ttype: SET_PROFILE_ERRORS,\n\t\t\t\tpayload: error.response.data.errors,\n\t\t\t});\n\t\t}\n\t};\n};\nexport const updatePasswordAction = (userData) => {\n\treturn async (dispatch, getState) => {\n\t\tconst {\n\t\t\tAuthReducer: { token },\n\t\t} = getState();\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t},\n\t\t};\n\t\tdispatch({ type: SET_LOADER });\n\t\ttry {\n\t\t\tconst { data } = await axios.post('/updatePassword', userData, config);\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tdispatch({ type: SET_MESSAGE, payload: data.msg });\n\t\t\tdispatch({ type: REDIRECT_TRUE });\n\t\t} catch (error) {\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tdispatch({\n\t\t\t\ttype: SET_PROFILE_ERRORS,\n\t\t\t\tpayload: error.response.data.errors,\n\t\t\t});\n\t\t}\n\t};\n};\n","/Users/bishwa/Bishwa/new/pns-blog/client/src/store/reducers/PostReducer.js",["165"],"import {\n\tSET_LOADER,\n\tCLOSE_LOADER,\n\tCREATE_ERRORS,\n\tREMOVE_ERRORS,\n\tREDIRECT_TRUE,\n\tREDIRECT_FALSE,\n\tSET_MESSAGE,\n\tREMOVE_MESSAGE,\n\tSET_POSTS,\n\tSET_POST,\n\tPOST_REQUEST,\n\tPOST_RESET,\n\tRESET_UPDATE,\n\tSET_UPDATE_ERRORS,\n\tRESET_UPDATE_ERRORS,\n\tUPDATE_IMAGE_ERROR,\n\tRESET_UPDATE_IMAGE_ERRORS,\n\tSET_DETAILS,\n} from '../types/PostTypes';\nconst initState = {\n\tloading: false,\n\tcreateErrors: [],\n\tredirect: false,\n\tmessage: '',\n\tposts: [],\n\tperPage: 0,\n\tcount: 0,\n\tpost: {},\n\tpostStatus: false,\n\teditErrors: [],\n\tupdateImageErrors: [],\n\tdetails: {},\n};\nexport const PostReducer = (state = initState, action) => {\n\tconst { type, payload } = action;\n\tif (type === SET_LOADER) {\n\t\treturn { ...state, loading: true };\n\t} else if (type === CLOSE_LOADER) {\n\t\treturn { ...state, loading: false };\n\t} else if (type === CREATE_ERRORS) {\n\t\treturn { ...state, createErrors: payload };\n\t} else if (type === REDIRECT_TRUE) {\n\t\treturn { ...state, redirect: true };\n\t} else if (type === REDIRECT_FALSE) {\n\t\treturn { ...state, redirect: false };\n\t} else if (type === SET_MESSAGE) {\n\t\treturn { ...state, message: action.payload };\n\t} else if (type === REMOVE_MESSAGE) {\n\t\treturn { ...state, message: '' };\n\t} else if (type === REMOVE_ERRORS) {\n\t\treturn { ...state, createErrors: [] };\n\t} else if (type === SET_DETAILS) {\n\t\treturn { ...state, details: payload };\n\t} else {\n\t\treturn state;\n\t}\n};\nexport const FetchPosts = (state = initState, action) => {\n\tconst { type, payload } = action;\n\tif (type === SET_POSTS) {\n\t\treturn {\n\t\t\t...state,\n\t\t\tposts: payload.response,\n\t\t\tcount: payload.count,\n\t\t\tperPage: payload.perPage,\n\t\t};\n\t} else {\n\t\treturn state;\n\t}\n};\nexport const FetchPost = (state = initState, action) => {\n\tconst { type, payload } = action;\n\tif (type === SET_POST) {\n\t\treturn { ...state, post: payload };\n\t} else if (type === POST_REQUEST) {\n\t\treturn { ...state, postStatus: true };\n\t} else if (type === POST_RESET) {\n\t\treturn { ...state, postStatus: false };\n\t} else {\n\t\treturn state;\n\t}\n};\nexport const UpdatePost = (state = initState, action) => {\n\tconst { type, payload } = action;\n\tif (type === SET_UPDATE_ERRORS) {\n\t\treturn { ...state, editErrors: payload };\n\t} else if (type === RESET_UPDATE_ERRORS) {\n\t\treturn {\n\t\t\t...state,\n\t\t\teditErrors: [],\n\t\t};\n\t} else {\n\t\treturn state;\n\t}\n};\nexport const UpdateImage = (state = initState, action) => {\n\tconst { payload, type } = action;\n\tif (type === UPDATE_IMAGE_ERROR) {\n\t\treturn {\n\t\t\t...state,\n\t\t\tupdateImageErrors: payload,\n\t\t};\n\t} else if (type === RESET_UPDATE_IMAGE_ERRORS) {\n\t\treturn {\n\t\t\t...state,\n\t\t\tupdateImageErrors: [],\n\t\t};\n\t} else {\n\t\treturn state;\n\t}\n};\n","/Users/bishwa/Bishwa/new/pns-blog/client/src/store/reducers/ProfileReducer.js",[],"/Users/bishwa/Bishwa/new/pns-blog/client/src/store/reducers/AuthReducer.js",[],{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":11,"column":2,"nodeType":"172","messageId":"173","endLine":11,"endColumn":14},{"ruleId":"174","severity":1,"message":"175","line":38,"column":5,"nodeType":"176","endLine":38,"endColumn":11,"suggestions":"177"},{"ruleId":"174","severity":1,"message":"178","line":55,"column":5,"nodeType":"176","endLine":55,"endColumn":17,"suggestions":"179"},{"ruleId":"174","severity":1,"message":"180","line":60,"column":5,"nodeType":"176","endLine":60,"endColumn":15,"suggestions":"181"},{"ruleId":"174","severity":1,"message":"182","line":63,"column":5,"nodeType":"176","endLine":63,"endColumn":14,"suggestions":"183"},{"ruleId":"174","severity":1,"message":"184","line":66,"column":5,"nodeType":"176","endLine":66,"endColumn":11,"suggestions":"185"},{"ruleId":"170","severity":1,"message":"186","line":16,"column":10,"nodeType":"172","messageId":"173","endLine":16,"endColumn":17},{"ruleId":"174","severity":1,"message":"187","line":25,"column":5,"nodeType":"176","endLine":25,"endColumn":7,"suggestions":"188"},{"ruleId":"174","severity":1,"message":"178","line":31,"column":5,"nodeType":"176","endLine":31,"endColumn":19,"suggestions":"189"},{"ruleId":"174","severity":1,"message":"180","line":36,"column":5,"nodeType":"176","endLine":36,"endColumn":15,"suggestions":"190"},{"ruleId":"174","severity":1,"message":"178","line":14,"column":5,"nodeType":"176","endLine":14,"endColumn":9,"suggestions":"191"},{"ruleId":"174","severity":1,"message":"178","line":45,"column":5,"nodeType":"176","endLine":45,"endColumn":24,"suggestions":"192"},{"ruleId":"174","severity":1,"message":"180","line":50,"column":5,"nodeType":"176","endLine":50,"endColumn":15,"suggestions":"193"},{"ruleId":"194","severity":1,"message":"195","line":84,"column":32,"nodeType":"196","endLine":84,"endColumn":64},{"ruleId":"174","severity":1,"message":"197","line":81,"column":5,"nodeType":"176","endLine":81,"endColumn":29,"suggestions":"198"},{"ruleId":"194","severity":1,"message":"195","line":181,"column":27,"nodeType":"196","endLine":181,"endColumn":53},{"ruleId":"174","severity":1,"message":"178","line":20,"column":5,"nodeType":"176","endLine":20,"endColumn":11,"suggestions":"199"},{"ruleId":"174","severity":1,"message":"178","line":39,"column":5,"nodeType":"176","endLine":39,"endColumn":19,"suggestions":"200"},{"ruleId":"174","severity":1,"message":"180","line":44,"column":5,"nodeType":"176","endLine":44,"endColumn":15,"suggestions":"201"},{"ruleId":"202","severity":1,"message":"203","line":19,"column":30,"nodeType":"204","messageId":"205","endLine":19,"endColumn":32},{"ruleId":"170","severity":1,"message":"206","line":8,"column":2,"nodeType":"172","messageId":"173","endLine":8,"endColumn":16},{"ruleId":"170","severity":1,"message":"207","line":10,"column":2,"nodeType":"172","messageId":"173","endLine":10,"endColumn":16},{"ruleId":"170","severity":1,"message":"208","line":14,"column":2,"nodeType":"172","messageId":"173","endLine":14,"endColumn":13},{"ruleId":"170","severity":1,"message":"209","line":9,"column":2,"nodeType":"172","messageId":"173","endLine":9,"endColumn":22},{"ruleId":"170","severity":1,"message":"171","line":14,"column":2,"nodeType":"172","messageId":"173","endLine":14,"endColumn":14},"no-native-reassign",["210"],"no-negated-in-lhs",["211"],"no-unused-vars","'RESET_UPDATE' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'id', and 'postStatus'. Either include them or remove the dependency array.","ArrayExpression",["212"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["213"],"React Hook useEffect has a missing dependency: 'push'. Either include it or remove the dependency array.",["214"],"React Hook useEffect has missing dependencies: 'dispatch' and 'redirect'. Either include them or remove the dependency array.",["215"],"React Hook useEffect has missing dependencies: '_id' and 'dispatch'. Either include them or remove the dependency array.",["216"],"'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.",["217"],["218"],["219"],["220"],["221"],["222"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["223"],["224"],["225"],["226"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'REDIRECT_FALSE' is defined but never used.","'REMOVE_MESSAGE' is defined but never used.","'EDIT_ERRORS' is defined but never used.","'RESET_PROFILE_ERRORS' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"231","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"231","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"239","fix":"251"},{"desc":"231","fix":"252"},"Update the dependencies array to be: [dispatch, id, post, postStatus]",{"range":"253","text":"254"},"Update the dependencies array to be: [dispatch, editErrors]",{"range":"255","text":"256"},"Update the dependencies array to be: [push, redirect]",{"range":"257","text":"258"},"Update the dependencies array to be: [dispatch, message, redirect]",{"range":"259","text":"260"},"Update the dependencies array to be: [_id, dispatch, page]",{"range":"261","text":"262"},"Update the dependencies array to be: [name]",{"range":"263","text":"264"},"Update the dependencies array to be: [dispatch, updateErrors]",{"range":"265","text":"266"},{"range":"267","text":"258"},"Update the dependencies array to be: [dispatch, id]",{"range":"268","text":"269"},"Update the dependencies array to be: [dispatch, updateImageErrors]",{"range":"270","text":"271"},{"range":"272","text":"258"},"Update the dependencies array to be: [createErrors, props.history, redirect]",{"range":"273","text":"274"},"Update the dependencies array to be: [dispatch, page]",{"range":"275","text":"276"},{"range":"277","text":"266"},{"range":"278","text":"258"},[1192,1198],"[dispatch, id, post, postStatus]",[1550,1562],"[dispatch, editErrors]",[1633,1643],"[push, redirect]",[1720,1729],"[dispatch, message, redirect]",[1790,1796],"[_id, dispatch, page]",[931,933],"[name]",[1099,1113],"[dispatch, updateErrors]",[1184,1194],[516,520],"[dispatch, id]",[1466,1485],"[dispatch, updateImageErrors]",[1556,1566],[2315,2339],"[createErrors, props.history, redirect]",[705,711],"[dispatch, page]",[1200,1214],[1285,1295]]